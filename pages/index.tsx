import Head from 'next/head';
import styles from '../styles/Home.module.css';
import Game from '../components/Game';
import dayjs from 'dayjs';

import path from 'path';
import { promises as fs } from 'fs';
import {
  FormattedPlayer,
  FormattedTeam,
  BasicAnswer,
} from '../custom-types';

type HomeProps = {
  teams: FormattedTeam[];
  players: FormattedPlayer[];
  answer: BasicAnswer;
};

const Home: React.FC<HomeProps> = ({ teams, players, answer }) => {
  return (
    <>
      <Head>
        <title>worldiesle</title>
        <meta
          name="description"
          content="Generated by create next app"
        />
        <meta
          name="viewport"
          content="width=device-width, initial-scale=1"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.headerRow}>
          <h2>
            worldies<span className="highlighted-text">le</span>
          </h2>
        </div>
        <div className={styles.bodyContent}>
          <p className={styles.heroText}>
            <h1>
              Guess the teams, scorer and year of this iconic or
              <span className="highlighted-text-secondary">
                {' '}
                worldie
              </span>{' '}
              goal from the pictures below
            </h1>
          </p>

          <Game teams={teams} players={players} answer={answer} />
        </div>
      </main>
    </>
  );
};

const LAUNCH_DATE = '2023-01-04';
export async function getStaticProps() {
  const daysSinceLaunch = dayjs().diff(LAUNCH_DATE, 'day');

  //Find the absolute path of the json directory
  const jsonDirectory = path.join(process.cwd(), 'data');
  const teamsFile = await fs.readFile(
    jsonDirectory + '/teams.json',
    'utf8'
  );
  const playersFile = await fs.readFile(
    jsonDirectory + '/players.json',
    'utf8'
  );

  const answer: BasicAnswer = {
    teamA: 'CHE',
    teamB: 'LIV',
    player: 'Mohamed Salah',
    year: 2020,
    competition: 'Premier League',
    link: 'http://youtube.com',
  };

  return {
    props: {
      teams: JSON.parse(teamsFile),
      players: JSON.parse(playersFile),
      answer,
    },
  };
}

export default Home;
